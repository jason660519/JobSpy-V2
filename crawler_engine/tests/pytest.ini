[tool:pytest]
# pytest配置文件

# 測試發現
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 標記定義
markers =
    unit: 單元測試 - 測試單個組件或函數
    integration: 集成測試 - 測試組件間的交互
    e2e: 端到端測試 - 測試完整的用戶場景
    performance: 性能測試 - 測試系統性能和負載
    slow: 慢速測試 - 運行時間較長的測試
    fast: 快速測試 - 運行時間較短的測試
    smoke: 冒煙測試 - 基本功能驗證
    regression: 回歸測試 - 防止功能退化
    api: API測試 - 測試API接口
    database: 數據庫測試 - 測試數據庫操作
    browser: 瀏覽器測試 - 測試瀏覽器自動化
    ai: AI功能測試 - 測試AI相關功能
    mock: 模擬測試 - 使用模擬對象的測試
    real: 真實測試 - 使用真實服務的測試

# 輸出配置
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    --durations=10
    --color=yes
    --capture=no
    --show-capture=all
    --disable-warnings
    --asyncio-mode=auto

# 異步測試配置
asyncio_mode = auto

# 日誌配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 文件日誌
log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 測試超時
timeout = 300
timeout_method = thread

# 並行測試
# 需要安裝 pytest-xdist: pip install pytest-xdist
# 使用方法: pytest -n auto

# 覆蓋率配置
# 需要安裝 pytest-cov: pip install pytest-cov
# 使用方法: pytest --cov=crawler_engine --cov-report=html

# 過濾警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:urllib3.*
    ignore::UserWarning:aiohttp.*

# 最小版本要求
minversion = 6.0

# 測試數據目錄
testmon_datafile = .testmondata

# JUnit XML報告
# 使用方法: pytest --junitxml=report.xml
junit_suite_name = crawler_engine_tests
junit_logging = all
junit_log_passing_tests = true
junit_family = xunit2

# HTML報告
# 需要安裝 pytest-html: pip install pytest-html
# 使用方法: pytest --html=report.html --self-contained-html

# 性能測試配置
# 需要安裝 pytest-benchmark: pip install pytest-benchmark
# benchmark相關配置會在需要時添加

# 測試環境變量
env =
    TESTING = 1
    LOG_LEVEL = DEBUG
    CACHE_BACKEND = memory
    DATABASE_URL = sqlite:///:memory:
    AI_API_KEY = test_key
    BROWSER_HEADLESS = true